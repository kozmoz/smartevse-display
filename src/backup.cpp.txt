#include <M5Unified.h>

// BMP image data
const uint8_t bmp_pixel_data[] = {
0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x19, 0xFF, 0x98, 0x19, 0xFC, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    , 0x00, 0x18, 0x39, 0xFF, 0x98, 0x19, 0xFE, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x18, 0x71, 0x80, 0x18, 0x19, 0x87, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xE1, 0x80, 0x0F, 0xF1, 0x83, 0x01
    , 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0xC1, 0x80, 0x0F,
    0xF1, 0x81, 0x81, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE1, 0x80, 0x0C, 0x31, 0x81, 0x81, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    , 0x00, 0x1F, 0xF1, 0xFE, 0x06, 0x61, 0x81, 0x83, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x18, 0x39, 0xFE, 0x06, 0x61, 0x81, 0x83, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x19, 0x80, 0x06, 0x61, 0x81, 0x86
    , 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x19, 0x80, 0x03,
    0xC1, 0x81, 0x86, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x19, 0x80, 0x03, 0xC1, 0x83, 0x0C, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    , 0x00, 0x18, 0x39, 0x80, 0x03, 0xC1, 0x87, 0x0C, 0x30, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0xF1, 0xFF, 0x81, 0x81, 0xFE, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE1, 0xFF, 0x81, 0x81, 0xFC, 0x18
    , 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x00, 0x00
    , 0x00, 0x00, 0x60, 0x01, 0x80, 0x0C, 0x01, 0x80, 0x00, 0x00, 0x00, 0x10, 0x02,
    0x09, 0x00, 0x00, 0x00, 0x00, 0x90, 0x02, 0x40, 0x06, 0x03, 0x00, 0x03, 0x80, 0x00, 0x10, 0x02, 0x09, 0x00, 0x00, 0x00, 0x3D, 0x0B, 0xF4, 0x2F, 0x03, 0x06, 0xFF
    , 0xFF, 0xFF, 0xFF, 0xD0, 0x02, 0x09, 0x00, 0x00, 0x00, 0x25, 0x0A, 0x14, 0x29,
    0x01, 0xFC, 0x00, 0x03, 0x80, 0x00, 0x10, 0x02, 0x09, 0x00, 0x00, 0x00, 0x44, 0x92, 0x12, 0x49, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x29, 0x00, 0x00
    , 0x00, 0x42, 0x64, 0x09, 0x91, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x17, 0xE2,
    0x09, 0x00, 0x00, 0x00, 0x21, 0x08, 0x04, 0x21, 0x00, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x14, 0x22, 0x09, 0x00, 0x00, 0x00, 0x20, 0xF0, 0x03, 0xC2, 0x00, 0x98, 0x00
    , 0x00, 0x0E, 0x44, 0x14, 0x22, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x04,
    0x00, 0x88, 0x00, 0x00, 0x11, 0x44, 0x14, 0x22, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x00, 0x98, 0x00, 0x00, 0x11, 0x7C, 0x14, 0x23, 0xF9, 0x00, 0x00
    , 0x00, 0x08, 0x00, 0x00, 0x30, 0x00, 0xA8, 0x00, 0x00, 0x1E, 0x44, 0x17, 0xE0,
    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0xC0, 0x00, 0xC8, 0x00, 0x00, 0x10, 0x44, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x88, 0x00
    , 0x00, 0x08, 0x28, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x18, 0x00,
    0x00, 0xC8, 0x00, 0x00, 0x07, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00
    , 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x98, 0x18, 0x00, 0x00, 0x7C, 0x18, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x88, 0x30, 0x00, 0x00, 0x44, 0x0C, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x88, 0x60
    , 0x00, 0x00, 0x20, 0x06, 0x00, 0x0C, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1F, 0xFF, 0xC0, 0x00, 0x00, 0x10, 0x03, 0x00, 0x19, 0x10, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x00, 0x00, 0x00, 0x20, 0x01, 0x80, 0x32, 0x08, 0x08
    , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x44, 0x00, 0xC0,
    0x64, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xA8, 0x30, 0x00, 0x00, 0x7C, 0x00, 0x60, 0xC8, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xC8, 0x60
    , 0x00, 0x00, 0x00, 0x00, 0x31, 0x90, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x18, 0x88, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x20, 0x34, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x40, 0x04, 0x10
    , 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
    0x80, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x50, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x20, 0xC0
    , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80
    , 0x00, 0x00, 0x00, 0x00, 0x00
};

void displayMonochromeBitmap(const uint8_t *bitmap, int width, int height, int x, int y) {
    // Begin writing to the display
    M5.Lcd.startWrite();
    M5.Lcd.setAddrWindow(x, y, width, height);

    uint16_t buffer[128]; // Buffer for one row (128 pixels max for this bitmap)

    for (int row = 0; row < height; ++row) {
        int bufferIndex = 0;

        for (int col = 0; col < width / 8; ++col) {
            uint8_t byte = bitmap[row * (width / 8) + col];

            for (int bit = 0; bit < 8; ++bit) {
                buffer[bufferIndex++] = (byte & (1 << (7 - bit))) ? 0xFFFF : 0x0000;
            }
        }

        // Push the row buffer to the display in one call
        M5.Lcd.pushPixels(buffer, width);
    }

    // End writing
    M5.Lcd.endWrite();
}

M5GFX &gfx = M5.Lcd;

// Button coordinates and dimensions
int buttonWidth = 140;
int buttonHeight = 60;

int solarButtonX = 20;
int solarButtonY = 100;

int smartButtonX = 180;
int smartButtonY = 100;

// Button states
bool isSolarActive = true;
bool isSmartActive = false;

void drawButton(const char *label, int x, int y, bool active) {
    gfx.fillRect(x, y, buttonWidth, buttonHeight, active ? TFT_BLUE : TFT_DARKGREY);
    gfx.drawRect(x, y, buttonWidth, buttonHeight, TFT_WHITE);
    gfx.setCursor(x + 20, y + 20);
    gfx.setTextColor(TFT_WHITE);
    gfx.setTextSize(2);
    gfx.println(label);
}

void playClickSound() {
    M5.Speaker.tone(1000, 100); // 1kHz for 100ms
}

void setup() {
    auto cfg = M5.config();
    // cfg.external_display = true;
    cfg.internal_spk = true; // Enable speaker
    M5.begin(cfg);

    gfx.fillScreen(TFT_BLACK);

    // Display "Ready" text
    gfx.setTextColor(TFT_RED);
    gfx.setTextSize(2);
    gfx.setCursor(0, 0);
    gfx.println("Ready");


    // Display the image from array
    // gfx.drawBitmap(160 - (128 / 2), 10, smartevseBmp, 128, 64, TFT_WHITE, TFT_BLACK);

    // Display the image at (0, 0)
    displayMonochromeBitmap(bmp_pixel_data, 128, 64, 64, 28);

    // Initial button drawing
    drawButton("Solar2", solarButtonX, solarButtonY, isSolarActive);
    drawButton("Smart2", smartButtonX, smartButtonY, isSmartActive);
}

void loop() {
    M5.update(); // Update touch status

    if (M5.Touch.isEnabled()) {
        auto touchPos = M5.Touch.getTouchPointRaw();

        // Check Solar button press
        if (touchPos.x > solarButtonX && touchPos.x < solarButtonX + buttonWidth &&
            touchPos.y > solarButtonY && touchPos.y < solarButtonY + buttonHeight) {
            if (!isSolarActive) {
                isSolarActive = true;
                isSmartActive = false;
                playClickSound();
                drawButton("Solar", solarButtonX, solarButtonY, isSolarActive);
                drawButton("Smart", smartButtonX, smartButtonY, isSmartActive);
            }
        }

        // Check Smart button press
        if (touchPos.x > smartButtonX && touchPos.x < smartButtonX + buttonWidth &&
            touchPos.y > smartButtonY && touchPos.y < smartButtonY + buttonHeight) {
            if (!isSmartActive) {
                isSmartActive = true;
                isSolarActive = false;
                playClickSound();
                drawButton("Solar", solarButtonX, solarButtonY, isSolarActive);
                drawButton("Smart", smartButtonX, smartButtonY, isSmartActive);
            }
        }
    }

    delay(50); // Small delay for debouncing
}
